Nullability is inherited from the source column.

You can lose or gain nullability with an expression:

Example (constant literals appear to be problematic - need a good NOOP function which can return NULL):
CREATE TABLE SO5465245_IN 
    ( 
     a INT NOT NULL 
    ,b INT NULL 
    ) ; 
GO 
 
SELECT  COALESCE(a, NULL) AS a 
       ,ISNULL(b, 0) AS b 
       ,COALESCE(10, NULL) AS c1 
       ,COALESCE(ABS(10), NULL) AS c2 
       ,CASE WHEN COALESCE(10, NULL) IS NOT NULL THEN COALESCE(10, NULL) ELSE NULL END AS c3 
INTO    SO5465245_OUT 
FROM    SO5465245_IN ; 
GO 
 
SELECT  TABLE_NAME 
       ,COLUMN_NAME 
       ,IS_NULLABLE 
FROM    INFORMATION_SCHEMA.COLUMNS 
WHERE   TABLE_NAME LIKE 'SO5465245%' 
ORDER BY TABLE_NAME 
       ,ORDINAL_POSITION ; 
GO 
 
DROP TABLE SO5465245_IN ; 
GO 
 
DROP TABLE SO5465245_OUT ; 
GO 
 


NULLIF seems to work great when using a column. Your answer made me think to try COALESCE(col_name, null) 
which universally works without needing to invent an impossible value. 

